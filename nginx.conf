#server {
 #       listen 80 ;
  #      server_name  *.nmedia2.com submit.nmedia2.com  nmedia2.com;
    #    server_name ~^(?<subdomain>.+)\.nmedia2\.com ~^(?<subdomain>.+)\.nmedia2\.com nmedia2.com;
   #     return 301 https://$host$request_uri;
#}
# server {
#     listen 80;
#     listen [::]:80;
#     #server_name www.website.com *.nmedia2.com;
#        server_name ~^(?<subdomain>.+)\.cradmin\.com cradmin.com nmedia2.com ~^(?<subdomain>.+)\.nmedia2\.com *.nmedia2.com;
# #    return 301 https://$host$request_uri;
# #    return 200 " ${ssl_server_name} ${host} ${request_uri}dddddddddddddddddddddd ";

#     location ^~ /.well-known{
#       root /app/ssl-folder/$host;
#       break;
# 	}

#     location / {
#         return 301 https://$host$request_uri;
#    }
# }



server {
#listen 80;
##listen 443;
server_name api.nmedia2.com nmedia2.com  *.nmedia2.com;

# listen 443 ssl;
# listen [::]:443 ssl;
  listen 80;
    listen [::]:80;
root /app/ssl-folder/$ssl_server_name;



#ssl on;
#ssl_certificate        /etc/nginx/ssl/cert.crt;
#ssl_certificate_key     /etc/nginx/ssl/key.pem;


set $sslfolder nmedia2.com;
#if (-d /etc/letsencrypt/live/$ssl_server_name){
 #set $ssl_server_name nmedia2.com;
#}

#ssl_certificate /etc/letsencrypt/live/$ssl_server_name/fullchain.pem;
#ssl_certificate_key /etc/letsencrypt/live/$ssl_server_name/privkey.pem;




#        listen 443 ssl ;
#        listen [::]:443 ssl ;
        proxy_intercept_errors on;



  #      ssl_certificate /etc/nginx/ssl/cert.crt;

   #     ssl_certificate_key /etc/nginx/ssl/key.pem;

    #   ssl on;
     #  server_name  *.*.nmedia2.com submit.nmedia2.com  nmedia2.com;
      # server_name  ~^(?<subdomain>.+)\.nmedia2\.com ~^(?<subdomain>.+)\.(?<dom>.+)\.com nmedia2.com;




#  listen 80;
#  server_name nmedia2.com *.nmedia2.com;
 # server_name ~^(?<subdomain>.+)\.cradmin\.com cradmin.com nmedia2.com ~^(?<subdomain>.+)\.nmedia2\.com ;

#   proxy_intercept_errors on;

#  if ($subdomain = "") {
#        return 200 "Welcome to  no subdomain";
  #       }
   #      return 200 "Welcome to $subdomain.domain.com";


#  location /web {
 #   include uwsgi_params;
  #  uwsgi_pass fe-server:8082;
  #}
  
# location = /page {

 #       proxy_set_header        Host storage.googleapis.com;
  #          proxy_set_header        Cookie "";
   #         proxy_set_header        Authorization "";
    #        proxy_set_header        Connection "";
     #       proxy_hide_header       x-goog-hash;
      #      proxy_hide_header       x-goog-generation;
       #     proxy_hide_header       x-goog-metageneration;
        #    proxy_hide_header       x-goog-stored-content-encoding;
          #  proxy_hide_header       x-goog-stored-content-length;
         #   proxy_hide_header       x-goog-storage-class;
#            proxy_hide_header       x-guploader-uploadid;
 #           proxy_hide_header       x-xss-protection;
   #         proxy_hide_header       x-goog-meta-goog-reserved-file-mtime;
  #          proxy_hide_header       accept-ranges;
    #        proxy_hide_header       alternate-protocol;
     #       proxy_hide_header       Set-Cookie;
      #      proxy_hide_header       Expires;
       #     proxy_hide_header       Cache-Control;
         #   proxy_ignore_headers    Set-Cookie;
        #    proxy_http_version      1.1;
          #  proxy_intercept_errors  on;
           # proxy_method            GET;
           # proxy_pass_request_body off;

#            proxy_ignore_headers    "Expires" "Cache-Control";


 #           add_header              X-Cache $upstream_cache_status;


#
 #           error_page              404 =200 /index.html;
#


  #          expires 1h;
   #         add_header Cache-Control "private";
 #      rewrite /$ $uri$index_name;
    #        set $baseurl https://storage.googleapis.com;
 #       return 200 "wecome   ";
#            proxy_set_header    Host storage.googleapis.com;
#           proxy_pass          https://storage.googleapis.com/cur_data_storage/BrandPages/untitled1626713387.html;
          #   proxy_pass        $baseurl/cur-layout-dev-data/$host$request_uri;
           #    proxy_set_header        Host "storage.googleapis.com";
           # proxy_set_header        X-Real-IP $remote_addr;
           # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
           # proxy_set_header        X-Forwarded-Proto $scheme;
           # proxy_set_header        Upgrade $http_upgrade;
           # proxy_set_header        Connection "upgrade";
      #      error_page 403 404 500 502 503 504 = /error.html;

            # error_page 404 = @fallback;
#}

  location / {
          set $baseurl https://storage.googleapis.com; 
            
#          proxy_set_header    Host $host:$server_port;
     #    proxy_set_header    Host storage.googleapis.com;
#proxy_set_header    Origin 'https://storage.googleapis.com';    
#proxy_set_header    Connection $http_connection;
#proxy_set_header    Cookie $http_cookie;
#proxy_set_header    Upgrade $http_upgrade;
#proxy_set_header    X-Forwarded-Protocol $scheme;
#proxy_set_header    X-Scheme $scheme;
#proxy_set_header    X-Real-IP $remote_addr;
#proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
#proxy_set_header    X-Frame-Options SAMEORIGIN;



           # proxy_set_header        Host storage.googleapis.com/cur-layout-dev-data;
#            proxy_set_header        Cookie "";
  #         proxy_set_header        Authorization "";
 #           proxy_set_header        Connection "";
   #         proxy_hide_header       x-goog-hash;
    #        proxy_hide_header       x-goog-generation;
     #       proxy_hide_header       x-goog-metageneration;
      #      proxy_hide_header       x-goog-stored-content-encoding;
       #     proxy_hide_header       x-goog-stored-content-length;
        #    proxy_hide_header       x-goog-storage-class;
          #  proxy_hide_header       x-guploader-uploadid;
         #   proxy_hide_header       x-xss-protection;
#            proxy_hide_header       x-goog-meta-goog-reserved-file-mtime;
 #           proxy_hide_header       accept-ranges;
  #          proxy_hide_header       alternate-protocol;
   #         proxy_hide_header       Set-Cookie;
    #        proxy_hide_header       Expires;
     #       proxy_hide_header       Cache-Control;
      #      proxy_ignore_headers    Set-Cookie;
       #     proxy_http_version      1.1;
        #    proxy_intercept_errors  on;
         #   proxy_method            GET;
          #  proxy_pass_request_body off;

           # proxy_ignore_headers    "Expires" "Cache-Control";
	#		 add_header              X-Cache $upstream_cache_status;



         #   error_page              404 =200 /index.html;



          #  expires 1h;
           # add_header Cache-Control "private";

#        proxy_pass        $baseurl/cur-layout-dev-data/$host$request_uri;

# proxy_set_header    Host                $host;
 #       proxy_set_header    X-Real-IP           $remote_addr;
  #      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

#   if ($host != 'nmedia2.com'){
#   return 200 "$host host us $request_uri ddd $baseurl/cur-layout-dev-data/$host$request_uri";
 #   proxy_pass        $baseurl/cur-layout-dev-data/$host$request_uri;
#}


  if ($host = 'nmedia2.com'){
   proxy_pass    http://webadmin:6000;
#   proxy_set_header Host "$http_host";
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        client_max_body_size 10M;
#        add_header 'Access-Control-Allow-Origin' '*' always;
#        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
#        if ($request_method = OPTIONS) {
#            break;
#       }

    set $temp_cache 2$temp_cache;
      break;



#   proxy_set_header    X-Real-IP   $remote_addr;
 #   proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
  #  proxy_set_header    X-Forwarded-Proto http;
   # proxy_set_header    Host    $http_host;
   # client_max_body_size 17m;
   # proxy_http_version  1.1;
   # proxy_set_header Upgrade $http_upgrade;
    #proxy_set_header    Connection "upgrade";
}


 if ($host != 'nmedia2.com' ) {
       set $temp_cache 1$temp_cache;
    }
 if ($request_uri = '/') {
        set $temp_cache 1$temp_cache;
    }

if ($temp_cache = 11) {  
#   return 301 https://$host/index.html;
#   return 301 https://$host;
proxy_pass        $baseurl/cur-layout-dev-data/$host/$host;

  
}
   if ($temp_cache = 1 ){
#  return 200 "$host host us $request_uri ddd $baseurl/cur-layout-dev-data/$host$request_uri mango nano $temp_cache";
    proxy_pass        $baseurl/cur-layout-dev-data/$host$request_uri;
#     proxy_set_header        Host "storage.googleapis.com";
           # proxy_set_header        X-Real-IP $remote_addr;
           # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
           # proxy_set_header        X-Forwarded-Proto $scheme;
           # proxy_set_header        Upgrade $http_upgrade;
           # proxy_set_header        Connection "upgrade";
   # error_page 403 404 500 502 503 504 = /error.html;

}

##if ($temp_cache = 12 ){

 ##proxy_pass    http://webadmin:6000;

#  return 200 "$host host us $request_uri ddd $baseurl/cur-layout-dev-data/$host$request_uri mango nano $temp_cache";
#    proxy_pass        $baseurl/cur-layout-dev-data/$host$request_uri;
 #   error_page 403 404 500 502 503 504 = /error.html;

##}

#return 200 "$host host us $request_uri ddd $baseurl/cur-layout-dev-data/$host$request_uri        temp  $temp_cache";


		#proxy_pass    http://webadmin:6000;




#  proxy_set_header        Host "storage.googleapis.com";
  #          proxy_set_header        X-Real-IP $remote_addr;
 #           proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
   #         proxy_set_header        X-Forwarded-Proto $scheme;
    #        proxy_set_header        Upgrade $http_upgrade;
     #       proxy_set_header        Connection "upgrade";
   # error_page 403 404 500 502 503 504 = /error.html;

# proxy_set_header    Host                $host;
 #       proxy_set_header    X-Real-IP           $remote_addr;
  #      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

#   proxy_set_header X-Forwarded_Host "storage.googleapis.com";
 #                       proxy_set_header X-Real_IP $remote_addr;
  #                      add_header P3P 'CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"';

  # proxy_set_header Host "$http_host";
     #   proxy_set_header X-Real-IP $remote_addr;
     #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     #   client_max_body_size 10M;
     #   add_header 'Access-Control-Allow-Origin' '*' always;
     #   add_header 'Access-Control-Allow-Credentials' 'true';
    #    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
       # add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
   #     add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
  #      if ($request_method = OPTIONS) {
 #           break;
#       }


  }

   location ~ .(static)/(js|css|media)/(.+)$ {
                proxy_pass    http://webadmin:6000;
        }
 location ^~ /sslcreate{
     # root /app/ssl-folder/$host;
     # break;
      include uwsgi_params;
    uwsgi_pass sslserver:8085;

        }


#  location ~ '^((/aapi/v1.0/[/A-Za-z0-9._-]*)|(/sapi/v1.0/[/A-Za-z0-9._-]*)|(/api/v1.0/[/A-Za-z0-9._-]*)|(/iapi/v1.0/[/A-Za-z0-9._-]*))$'
#  {
#         include uwsgi_params;
#     uwsgi_pass crserver:443;

#         proxy_set_header Host "$http_host";
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         client_max_body_size 10M;
#         add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#         add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
#        # if ($request_method = OPTIONS) {
#        #     break;
#        #}
#     }

# location /admin {
 #   include uwsgi_params;
  #  uwsgi_pass fe-server:8082;
 # }


location /error.html {
	    proxy_pass  https://storage.googleapis.com/cur_data_storage/error.html;
     # return 301 https://$host$request_uri/index.html;
#return 200 'https://$host/index.html';
#     RewriteEngine  on;
 #    RewriteRule ^$ index.html;
  #   RewriteRule ^(.*)$ index.php?$1 [L];
}

#location @fallback {
 #   proxy_pass https://storage.googleapis.com/sumit_test_bucket/error.html;
#}


# ssl_certificate /etc/letsencrypt/live/$ssl_server_name/fullchain.pem;
# ssl_certificate_key /etc/letsencrypt/live/$ssl_server_name/privkey.pem;


}

